<script>元素属性：
async：立即下载脚本，只对外部脚本文件有效，不妨碍其他操作，标记async的脚本不保证按照制定的先后顺序执行
charset： src属性指定的代码的字符集
defer： 表示脚本延迟到文档解析和显示后执行，即html和css加载后执行，只对外部脚本有效，此属性相当于告诉浏览器立即下载但是延迟执行（最好只有一个延迟脚本）
src： 引入外部文件，参数为文件路径
type：脚本的内容类型

现在web通常把js引用放在<body>中页面内容之后，减少延迟
引入js文件如下：
<script type="application/javascript" src="js/jquery-2.1.4.js"></script>

使用外部文件调用js代码的好处：
            1、可维护性，统一管理js代码
            2、可缓存，不同页面使用同一套js，可以只下载一次js文件，加快页面加载速度
            3、适应未来


变量：var定义变量，未初始化变量保存特殊值undefined。

/*********************************数据类型****************************************************************************************************/

数据类型：
typeof 返回字符串对应类型
    undefined ————》Undefined
    boolean ————》Boolean
    number ————》Number
    string ————》String
    object ————》Object或者Null
    function————》函数

    1、Undefined
    2、Null
    3、Boolean
    4、Number  8进制0开头，16进制0x开头，不要对浮点数值进行相加比较，如0.1+0.2==0.3(计算机计算浮点数值会产生舍入误差)，js中除以0会返回NaN，NaN和任何值都不相等，包括NaN
    Number()函数转换规则：
    Boolean值 true 1 false 0
    null 返回0
    undefined 返回NaN
    十六进制样式字符串 如0xf 返回相同大小的十进制数字
    空字符串返回0
    带字母等返回NaN
    如果是对象，调用对象的valueOf方法，然后返回，如果返回NaN调用toString()方法
    5、String
    6、Object
        创建方式 var obj = new Object();
        Object可以动态的创建属性，如obj.name = "wodemingzi";此时就是为了obj这个对象动态创建一个name属性
        每个Object自带方法:
        constructor ：构造函数，保存着用于创建当前对象的函数。对于前面的例子而言，构造函数就是Object();
        hasOwnProperty(propertyName):检查对象中是否存在该属性，属性名必须是字符串形式传入，如obj.hasOwnProperty("name")）。
        isPrototypeOf(object):检查传入对象是否是传入对象的原型
        propertyIsEnumerable（propertyName）：检查能否使用for-in来枚举
        toLocaleString():返回对象的字符串表示
        toString() 返回对象的字符串表示
        valueOf（）返回对象的字符串表示，数值或布尔值表示，通常与toString()方法的返回值相同



        基本类型是指简单的字段，引用类型是指对象


        基本类型变量值的复制前后相互独立，
        引用类型复制后是同一个指针，会相互影响
        通过instanceof判断一个值属于哪种引用类型
        js中判断数据类型的四种方法
        https://blog.csdn.net/liwenfei123/article/details/77978027

/*********************************数据类型****************************************************************************************************/





/**************************************语句****************************************************************************************************************/

       语句：for-in，是一种迭代语句，可以用来枚举对象的属性
       如 for(property in window){
       document.write(property);
       }
       如上是用for-in循环赋值window对象中的属性名给property，然后输出

       switch（expression）{
       case value : statement
       break;
       default :statement
       }
       如果表达式等于value，执行statement，break会跳出switch

        with语句的作用是将代码的作用域设置到一个特定的对象中
        语法：with(expression) statement;
        with语句的目的主要是为了简化多次编写同一个对象的工作：如下
        var qs = location.search.substring(1);
        var hostname = location.hostname;
        var url = location.href;
        上面代码都包含了location对象，如果使用with语句，可以把代码改为
        with(location){
            var qs = search.substring(1);
            var hostname = hostname;
            var url = href;
        }
        在重写后的例子中，使用with语句关联了location对象。意味着在with语句的代码块内部，每个变量首先被认为是一个局部变量，而如果在局部环境中找不到该变量的定义，就会查询location对象中是否有同名的属性。如果发现，以location对象属性的值作为变量的值。（大量使用with会导致性能下降）

/**************************************语句****************************************************************************************************************/


/**************************************垃圾回收****************************************************************************************************************/
管理内存，一旦数据不再有用，将其设置为null，此方法为解除引用


/**************************************垃圾回收****************************************************************************************************************/